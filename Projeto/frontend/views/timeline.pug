extends layout

block content
  .w3-container.w3-padding-large
    .w3-card-4.w3-white.w3-round-large.w3-padding-large.w3-animate-opacity
      h1.w3-xxlarge.w3-left.w3-padding-bottom.w3-margin-bottom(style="font-weight:700;")= title

      if message
        .w3-panel(class=(messageType === 'error' ? 'w3-pale-red w3-border-red' : messageType === 'success' ? 'w3-pale-green w3-border-green' : 'w3-pale-yellow w3-border-yellow') + ' w3-display-container w3-round-large w3-padding w3-margin-bottom')
          span.w3-button.w3-large.w3-display-topright.w3-hover-text-red(onclick="this.parentElement.style.display='none'") ×
          p!= message

      if error
        .w3-panel.w3-pale-red.w3-border-red.w3-display-container.w3-round-large.w3-padding.w3-margin-bottom
          span.w3-button.w3-large.w3-display-topright.w3-hover-text-red(onclick="this.parentElement.style.display='none'") ×
          p= error

      if newsItems && newsItems.length > 0
        .w3-container.w3-margin-bottom
          h3.w3-text-theme News
          each item in newsItems
            .w3-card-4.w3-margin-bottom.w3-round-large
              header.w3-container.w3-theme-l1.w3-padding.w3-round-top-large
                h4= item.title
              .w3-container.w3-padding
                p= item.content
                p.w3-small.w3-text-grey
                  | Published on #{new Date(item.publicationDate).toLocaleDateString()}
                  if item.author && item.author.username
                    |  by #{item.author.username}

      form.w3-card.w3-padding.w3-round-large.w3-margin-bottom.w3-light-grey(method="GET" action="/")
        .w3-row-padding
          .w3-col.l6.m6.s12.w3-margin-bottom
            label.w3-text-grey(for="resourceTypeFilterTimeline" style="display:block; margin-bottom: 4px; text-align: left;") Filter by Type:
            select.w3-select.w3-border.w3-round-large#resourceTypeFilterTimeline(name="resourceType")
              option(value="") ---
              each type in definedResourceTypes
                option(value=type, selected=(selectedResourceType === type))= type.charAt(0).toUpperCase() + type.slice(1)
          .w3-col.l6.m6.s12.w3-margin-bottom
            button.w3-button.w3-blue.w3-hover-blue-grey.w3-round-xlarge.w3-padding.w3-block(type="submit" style="margin-top: 24px;") Apply

      if resources && resources.length > 0
        .w3-container.w3-margin-top
          h3.w3-text-theme Resources
          each resource in resources
            .w3-card-4.w3-margin-bottom.w3-round-large
              header.w3-container.w3-light-grey.w3-padding.w3-round-top-large
                h4.w3-text-theme= resource.title
              .w3-container.w3-padding
                p
                  strong Type:
                  |  #{resource.resourceType.charAt(0).toUpperCase() + resource.resourceType.slice(1)}
                p
                  strong Creation Date:
                  |  #{resource.creationDate ? new Date(resource.creationDate).toLocaleDateString() : 'N/A'}
                if resource.producer
                  p
                    strong Producer:
                    |  #{resource.producer}
                if resource.description
                  .w3-panel.w3-pale-blue.w3-leftbar.w3-border-blue.w3-padding.w3-round.w3-margin-top.w3-margin-bottom
                    h5.w3-small.w3-text-dark-grey Description:
                    p.w3-small= resource.description
                - const customFieldEntries = resource.customFields ? Object.entries(resource.customFields) : []
                if customFieldEntries.length > 0
                  .w3-panel.w3-pale-yellow.w3-leftbar.w3-border-yellow.w3-padding.w3-round.w3-margin-top.w3-margin-bottom
                    each entry in customFieldEntries
                      p.w3-small
                        strong #{entry[0].charAt(0).toUpperCase() + entry[0].slice(1).replace(/([A-Z])/g, ' $1').trim()}:
                        |  #{entry[1]}
                if resource.tags && resource.tags.length > 0
                  .w3-margin-top.w3-margin-bottom
                    strong Tags:
                    each tag in resource.tags
                      span.w3-tag.w3-round.w3-theme-l4.w3-margin-right.w3-margin-bottom.w3-small #{tag}
                if resource.associatedFiles && resource.associatedFiles.length > 0
                  .w3-margin-top
                    strong Files:
                    ul.w3-ul.w3-border.w3-round.w3-margin-top-small
                      each file in resource.associatedFiles
                        li.w3-padding-small
                          | #{file.originalName}
                          span.w3-small.w3-text-grey ( #{ (file.size / 1024).toFixed(2) } KB )
                          a.w3-button.w3-tiny.w3-green.w3-round.w3-margin-left.w3-hover-dark-green(
                            href=`/download/resource/${resource._id}/file/${file.storageName}/${file.originalName}` title=`Download ${file.originalName}`
                          )
                            i.fa.fa-download
              footer.w3-container.w3-light-grey.w3-padding.w3-round-bottom-large.w3-margin-top
                if resource.associatedFiles && resource.associatedFiles.length > 0
                  a.w3-button.w3-small.w3-green.w3-round.w3-hover-dark-green(
                    href=`/download/resource/${resource._id}/dip` title="Download DIP (all files)"
                  )
                    i.fa.fa-archive
                    |  Download
                else
                  span.w3-text-grey No downloadable package.
      else if !error
        p.w3-center.w3-text-grey.w3-padding-32 No public resources found matching your criteria.
